name: e-commerce 

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  ecommerce:
    runs-on: ubuntu-latest
    name: e-commerce
    steps:

    - name: checking code
      uses: actions/checkout@v4
    - name: Cache
      uses: actions/cache@v4.1.2
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: e-commerce-cached
        # An explicit key for restoring and saving the cache
        key: e-commerce
        # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
        enableCrossOsArchive: true
        # Fail the workflow if cache entry is not found
        fail-on-cache-miss: false
        # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
        lookup-only: false
        # Run the post step to save the cache even if another step before fails
        save-always: true
        
    - name: python setup
      uses: actions/setup-python@v5
      with:
        python-version: '3.13' 

    - name: install dependencies
      run: |
       pip install pytest pytest-cov flask
        
    - name: running static analysis
      uses: sonarsource/sonarqube-scan-action@v3
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
      with:
        args: -Dsonar.python.coverage.reportPaths=user-service/coverage.xml,order-service/coverage.xml,product-service/coverage.xml
